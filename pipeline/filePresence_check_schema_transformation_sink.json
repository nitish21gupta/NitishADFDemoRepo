{
	"name": "filePresence_check_schema_transformation_sink",
	"properties": {
		"activities": [
			{
				"name": "check For file presence",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_test_env_blob",
						"type": "DatasetReference"
					},
					"timeout": "0.00:02:00",
					"sleep": 10
				}
			},
			{
				"name": "get schema from source",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "check For file presence",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_test_env_blob",
						"type": "DatasetReference"
					},
					"fieldList": [
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Get schema from sample destination",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "get schema from source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_test_env_dataLake",
						"type": "DatasetReference"
					},
					"fieldList": [
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get schema from sample destination",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('get schema from source').output.structure, activity('Get schema from sample destination').output.structure)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Web1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://www.google.com",
								"method": "GET"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}